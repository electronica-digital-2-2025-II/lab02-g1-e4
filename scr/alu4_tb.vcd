$date
	Wed Oct 15 15:39:26 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_alu4 $end
$var wire 1 ! zero $end
$var wire 4 " y [3:0] $end
$var wire 1 # overflow $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$var reg 3 & op [2:0] $end
$scope module dut $end
$var wire 4 ' a [3:0] $end
$var wire 4 ( b [3:0] $end
$var wire 3 ) op [2:0] $end
$var wire 1 ! zero $end
$var wire 5 * sub5 [4:0] $end
$var wire 5 + shl5a [4:0] $end
$var wire 8 , mul8 [7:0] $end
$var wire 5 - add5 [4:0] $end
$var reg 1 # overflow $end
$var reg 4 . y [3:0] $end
$upscope $end
$scope task drive $end
$var reg 4 / aa [3:0] $end
$var reg 4 0 bb [3:0] $end
$var reg 3 1 oo [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 1
bx 0
bx /
b0 .
b0 -
b0 ,
b0 +
b10000 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
0#
b0 "
1!
$end
#1000
0!
b111 "
b111 .
b110 +
b1100 ,
b100 %
b100 (
b111 -
b1111 *
b11 $
b11 '
b0 1
b100 0
b11 /
#6000
1#
1!
b0 "
b0 .
b11110 +
b1 %
b1 (
b10000 -
b11110 *
b1111 ,
b1111 $
b1111 '
b1 0
b1111 /
#11000
0!
b101 "
b101 .
0#
b1110 +
b1 &
b1 )
b10 %
b10 (
b1001 -
b10101 *
b1110 ,
b111 $
b111 '
b1 1
b10 0
b111 /
#16000
1#
0!
b1111 "
b1111 .
b0 +
b1 %
b1 (
b1 -
b1111 *
b0 ,
b0 $
b0 '
b1 0
b0 /
#21000
0#
0!
b1001 "
b1001 .
b110 +
b10 &
b10 )
b11 %
b11 (
b110 -
b10000 *
b1001 ,
b11 $
b11 '
b10 1
b11 0
b11 /
#26000
1#
0!
b1 "
b1 .
b11110 +
b1111 %
b1111 (
b11110 -
b10000 *
b11100001 ,
b1111 $
b1111 '
b1111 0
b1111 /
#31000
0#
0!
b1111 "
b1111 .
b0 +
b11 &
b11 )
b0 %
b0 (
b0 -
b10000 *
b0 ,
b0 $
b0 '
b11 1
b0 0
b0 /
#36000
1!
b0 "
b0 .
b10100 +
b110010 ,
b101 %
b101 (
b1111 -
b10101 *
b1010 $
b1010 '
b101 0
b1010 /
#41000
0!
b1110 "
b1110 .
b1110 +
b100 &
b100 )
bx %
bx (
bx -
bx *
bx ,
b111 $
b111 '
b100 1
bx 0
b111 /
#46000
1#
1!
b0 "
b0 .
b10000 +
b1000 $
b1000 '
b1000 /
#51000
b10011 *
0!
b100 "
b100 .
0#
b1000 +
b10 &
b10 )
b101 -
b100 ,
b1 %
b1 (
b100 $
b100 '
b10 1
b1 0
b100 /
#56000
0!
b110 "
b110 .
b10010 +
b1 &
b1 )
b11 %
b11 (
b1100 -
b10110 *
b11011 ,
b1001 $
b1001 '
b1 1
b11 0
b1001 /
#61000
1#
0!
b1010 "
b1010 .
b11010 +
b0 &
b0 )
b1101 %
b1101 (
b11010 -
b10000 *
b10101001 ,
b1101 $
b1101 '
b0 1
b1101 0
b1101 /
#66000
0#
0!
b111 "
b111 .
b1010 +
b10 %
b10 (
b111 -
b10011 *
b1010 ,
b101 $
b101 '
b10 0
b101 /
#71000
0!
b1101 "
b1101 .
b10 +
b10 &
b10 )
b1101 %
b1101 (
b1110 -
b100 *
b1101 ,
b1 $
b1 '
b10 1
b1101 0
b1 /
#76000
1!
b0 "
b0 .
b1100 +
b11 &
b11 )
b10011 -
b1001 *
b1001110 ,
b110 $
b110 '
b11 1
b110 /
#81000
1#
0!
b1001 "
b1001 .
b11010 +
b0 &
b0 )
b1100 %
b1100 (
b11001 -
b10001 *
b10011100 ,
b1101 $
b1101 '
b0 1
b1100 0
b1101 /
#86000
0#
0!
b1111 "
b1111 .
b10010 +
b110 %
b110 (
b1111 -
b10011 *
b110110 ,
b1001 $
b1001 '
b110 0
b1001 /
#91000
1#
0!
b10 "
b10 .
b1010 +
b10 &
b10 )
b1010 %
b1010 (
b1111 -
b1011 *
b110010 ,
b101 $
b101 '
b10 1
b1010 0
b101 /
#96000
b1110 *
1#
0!
b11 "
b11 .
b1100 -
b100011 ,
b111 %
b111 (
b111 0
#111000
